name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  create-release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Generate changelog
        id: changelog
        run: |
          # G√©n√©rer un changelog bas√© sur les commits
          echo "## üéâ Nouvelle Version ${{ github.ref_name }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### ‚ú® Nouvelles Fonctionnalit√©s" >> $GITHUB_STEP_SUMMARY
          git log --pretty=format:"- %s" $(git describe --tags --abbrev=0 HEAD^)..HEAD | grep -E "^(feat|feature)" | sed 's/^feat: /- /' | sed 's/^feature: /- /' >> $GITHUB_STEP_SUMMARY || echo "- Aucune nouvelle fonctionnalit√©" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### üêõ Corrections de Bugs" >> $GITHUB_STEP_SUMMARY
          git log --pretty=format:"- %s" $(git describe --tags --abbrev=0 HEAD^)..HEAD | grep -E "^(fix|bug)" | sed 's/^fix: /- /' | sed 's/^bug: /- /' >> $GITHUB_STEP_SUMMARY || echo "- Aucune correction de bug" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### üìö Documentation" >> $GITHUB_STEP_SUMMARY
          git log --pretty=format:"- %s" $(git describe --tags --abbrev=0 HEAD^)..HEAD | grep -E "^(docs|doc)" | sed 's/^docs: /- /' | sed 's/^doc: /- /' >> $GITHUB_STEP_SUMMARY || echo "- Aucune mise √† jour de documentation" >> $GITHUB_STEP_SUMMARY

      - name: Create Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          body: |
            ## üéâ Nouvelle Version ${{ github.ref_name }}
            
            ### ‚ú® Nouvelles Fonctionnalit√©s
            - Syst√®me de gestion int√©gr√© VITACH GUIN√âE
            - Interface utilisateur moderne et intuitive
            - Gestion compl√®te des achats, stock, v√©hicules
            - Syst√®me d'authentification s√©curis√©
            - Export CSV et g√©n√©ration PDF
            - Tableau de bord avec statistiques
            
            ### üèóÔ∏è Architecture
            - **Backend:** FastAPI (Python)
            - **Base de donn√©es:** SQLite
            - **Frontend:** HTML/CSS/JavaScript
            - **Authentification:** JWT avec r√¥les
            - **Serveur:** Uvicorn
            
            ### üë• Utilisateurs par D√©faut
            - `admin` / `admin123` (Administrateur)
            - `manager` / `manager123` (Manager)
            - `user` / `user123` (Utilisateur)
            - `viewer` / `viewer123` (Visualiseur)
            
            ### üöÄ Installation
            ```bash
            git clone https://github.com/${{ github.repository }}.git
            cd vitach-guinee
            pip install -r requirements.txt
            python main.py
            ```
            
            ### üìñ Documentation
            - [README.md](README.md) - Documentation compl√®te
            - [CONTRIBUTING.md](CONTRIBUTING.md) - Guide de contribution
            - [ETAT_AVANCEMENT.md](ETAT_AVANCEMENT.md) - √âtat du projet
            
            ### üîó Liens
            - **Application:** http://localhost:8000/
            - **Issues:** https://github.com/${{ github.repository }}/issues
            - **Discussions:** https://github.com/${{ github.repository }}/discussions
            
            ---
            
            **Statut:** ‚úÖ Production Ready  
            **Version:** ${{ github.ref_name }}  
            **Date:** $(date +'%d %B %Y')
          draft: false
          prerelease: false


