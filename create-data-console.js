// Script √† ex√©cuter dans la console du navigateur pour cr√©er des donn√©es de test
// Copiez et collez ce code dans la console de votre navigateur (F12)

console.log('üöÄ Cr√©ation de donn√©es de test...');

// Configuration Firebase (utilisez la m√™me que dans votre app)
const firebaseConfig = {
    apiKey: "AIzaSyDE-TBWNZ_Y4WdPHaezRXIf1vizPEralVY",
    authDomain: "stock-bcbd3.firebaseapp.com",
    projectId: "stock-bcbd3",
    storageBucket: "stock-bcbd3.appspot.com",
    messagingSenderId: "901950451449",
    appId: "1:901950451449:web:your-app-id"
};

// Initialiser Firebase si pas d√©j√† fait
if (typeof firebase === 'undefined') {
    console.log('‚ùå Firebase n\'est pas charg√©. Veuillez ex√©cuter ce script sur la page de votre application.');
} else {
    const db = firebase.firestore();
    
    // Fonction pour cr√©er des commandes d'exemple
    async function createSampleCommandes() {
        try {
            console.log('üìù Cr√©ation des commandes...');
            
            const commandes = [
                {
                    article: "Ordinateur portable Dell",
                    description: "Laptop pour le service informatique",
                    service: "Informatique",
                    quantite: 2,
                    statut: "en_attente",
                    createdAt: new Date(),
                    createdBy: "service-user-1"
                },
                {
                    article: "Imprimante HP LaserJet",
                    description: "Imprimante laser pour le bureau",
                    service: "Administration",
                    quantite: 1,
                    prix: 450.00,
                    statut: "en_attente_approbation",
                    createdAt: new Date(),
                    createdBy: "service-user-2",
                    dateAjoutPrix: new Date(),
                    prixAjoutePar: "achat-user-1"
                },
                {
                    article: "Formation s√©curit√© informatique",
                    description: "Formation pour l'√©quipe IT",
                    service: "Formation",
                    quantite: 1,
                    prix: 1500.00,
                    statut: "approuve",
                    createdAt: new Date(),
                    createdBy: "service-user-2",
                    dateAjoutPrix: new Date(),
                    prixAjoutePar: "achat-user-1",
                    dateApprobation: new Date(),
                    approuvePar: "dg-user-1",
                    signatureDG: "Jean Dupont - DG",
                    commentaireDG: "Formation essentielle pour la s√©curit√©"
                },
                {
                    article: "√âquipement de luxe",
                    description: "√âquipement non essentiel",
                    service: "Administration",
                    quantite: 1,
                    prix: 5000.00,
                    statut: "rejete",
                    createdAt: new Date(),
                    createdBy: "service-user-3",
                    dateAjoutPrix: new Date(),
                    prixAjoutePar: "achat-user-1",
                    dateRejet: new Date(),
                    rejetePar: "dg-user-1",
                    commentaireRejet: "Budget insuffisant pour cet achat"
                }
            ];

            for (const commande of commandes) {
                await db.collection('commandes').add(commande);
                console.log(`‚úÖ Commande cr√©√©e: ${commande.article} (${commande.statut})`);
            }

            console.log('üéâ Toutes les commandes ont √©t√© cr√©√©es !');
            console.log('üîÑ Rechargez la page pour voir les donn√©es.');
            
        } catch (error) {
            console.error('‚ùå Erreur:', error);
        }
    }
    
    // Fonction pour cr√©er des v√©hicules
    async function createSampleVehicules() {
        try {
            console.log('üöó Cr√©ation des v√©hicules...');
            
            const vehicules = [
                {
                    marque: "Toyota",
                    modele: "Corolla",
                    immatriculation: "AB-123-CD",
                    annee: "2020",
                    kilometrage: "45000",
                    type: "voiture",
                    statut: "actif",
                    createdAt: new Date()
                },
                {
                    marque: "Ford",
                    modele: "Transit",
                    immatriculation: "EF-456-GH",
                    annee: "2019",
                    kilometrage: "78000",
                    type: "camion",
                    statut: "actif",
                    createdAt: new Date()
                }
            ];

            for (const vehicule of vehicules) {
                await db.collection('vehicules').add(vehicule);
                console.log(`‚úÖ V√©hicule cr√©√©: ${vehicule.marque} ${vehicule.modele}`);
            }

            console.log('üéâ Tous les v√©hicules ont √©t√© cr√©√©s !');
            
        } catch (error) {
            console.error('‚ùå Erreur:', error);
        }
    }
    
    // Fonction pour cr√©er des prestataires
    async function createSamplePrestataires() {
        try {
            console.log('üîß Cr√©ation des prestataires...');
            
            const prestataires = [
                {
                    nom: "Garage Auto Plus",
                    adresse: "123 Rue de la R√©publique, Paris",
                    telephone: "01 23 45 67 89",
                    email: "contact@garageautoplus.fr",
                    specialite: "Entretien g√©n√©ral",
                    statut: "actif",
                    createdAt: new Date()
                },
                {
                    nom: "M√©canique Express",
                    adresse: "456 Avenue des Champs, Lyon",
                    telephone: "04 56 78 90 12",
                    email: "info@mecanique-express.fr",
                    specialite: "R√©paration rapide",
                    statut: "actif",
                    createdAt: new Date()
                }
            ];

            for (const prestataire of prestataires) {
                await db.collection('prestataires').add(prestataire);
                console.log(`‚úÖ Prestataire cr√©√©: ${prestataire.nom}`);
            }

            console.log('üéâ Tous les prestataires ont √©t√© cr√©√©s !');
            
        } catch (error) {
            console.error('‚ùå Erreur:', error);
        }
    }
    
    // Fonction pour cr√©er des articles de stock
    async function createSampleStock() {
        try {
            console.log('üì¶ Cr√©ation des articles de stock...');
            
            const articles = [
                {
                    nom: "Ordinateur portable Dell",
                    reference: "DELL-LAT-001",
                    description: "Laptop Dell Latitude pour le bureau",
                    categorie: "Informatique",
                    quantite: 15,
                    seuilMinimum: 5,
                    prixUnitaire: 1200.00,
                    fournisseur: "Dell France",
                    emplacement: "Entrep√¥t A - √âtage 1",
                    createdAt: new Date()
                },
                {
                    nom: "Cartouches d'encre HP",
                    reference: "CAR-HP-006",
                    description: "Cartouches d'encre HP 305 - Noir",
                    categorie: "Informatique",
                    quantite: 2, // Stock faible
                    seuilMinimum: 5,
                    prixUnitaire: 35.00,
                    fournisseur: "HP France",
                    emplacement: "Entrep√¥t A - √âtage 2",
                    createdAt: new Date()
                },
                {
                    nom: "Claviers USB",
                    reference: "CLAV-USB-007",
                    description: "Claviers USB standard",
                    categorie: "Informatique",
                    quantite: 0, // Rupture de stock
                    seuilMinimum: 10,
                    prixUnitaire: 25.00,
                    fournisseur: "Logitech France",
                    emplacement: "Entrep√¥t A - √âtage 1",
                    createdAt: new Date()
                }
            ];

            for (const article of articles) {
                await db.collection('stock').add(article);
                console.log(`‚úÖ Article cr√©√©: ${article.nom} (Stock: ${article.quantite})`);
            }

            console.log('üéâ Tous les articles de stock ont √©t√© cr√©√©s !');
            
        } catch (error) {
            console.error('‚ùå Erreur:', error);
        }
    }
    
    // Fonction principale
    async function createAllSampleData() {
        console.log('üöÄ D√©but de la cr√©ation de toutes les donn√©es...');
        
        await createSampleCommandes();
        await createSampleVehicules();
        await createSamplePrestataires();
        await createSampleStock();
        
        console.log('üéâ Toutes les donn√©es de test ont √©t√© cr√©√©es !');
        console.log('üîÑ Rechargez votre application pour voir les donn√©es.');
    }
    
    // Ex√©cuter la cr√©ation
    createAllSampleData();
}
